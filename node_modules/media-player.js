var exec = require('child_process').exec,
    child; // Note that child is replaced every time a player is spawned.
var events = require('events');
var emitter = new events.EventEmitter();
var http = require('http-get');

// Configuration loaded from ENV. Probablly shouldn't be hidden away in this module.
var player = process.env.OMX_PLAYER;

// Global state
var playerRequests = 0;
var playing = 0;

// Internal logging helper
function logAndIncrementRequestId() {
    playerRequests++;
    console.log('Request ID: ' + playerRequests);
}

// Start the Media player given a file URL
function startPlayer(fileUrl) {

    var command = player + ' ' + fileUrl;

    if (process.env.NMC_DEV === "true") {
	command = 'sleep 5; echo "Player returning"';
    }
    
    console.log('Player command: ' + command);
    child = exec(command, function(err, stdout, stderr) {
	    if (err) throw err;
	    else {
		// When the child process returns, we can mark the player as stopped.
		console.log("Player child process returned!");
		console.log("Player STDOUT: " + stdout);
		console.log("Player STDERR: " + stderr);
		playing = 0;
		emitter.emit('playbackEnd');
	    }
	});

    // Potential race condition if the player returns quicky from the exec above.
    playing = 1;
};

// Play API call
var play = function(req, res, next) {

    logAndIncrementRequestId();
    console.log('>> POST: api/player/play | ' + req.body.url + ' <<');

    http.head(req.body.url, function (error, result) {
        if (error) {
	    console.error('HEAD check failed!' + error);
	    res.send(404, 'Could not find that file. Status code: ' + error.code);
	} 
 	else {
	    console.log('HEAD check OK!');

	    if (playing === 0) {
		startPlayer(req.body.url);
		res.send(201, "Playback requested.");
	    }

	    else {
		// Register event listener for the child process to exit, containing next URL
		emitter.once('playbackEnd', function () {
			console.log('Next video already queued. Loading...');
			startPlayer(req.body.url);
		    });
		
		child.stdin.write('q');
		res.send(201, "Playback change requested.");
	    }
	}
    });
}

// Stop API call
var stop = function(req, res, next) {

    logAndIncrementRequestId();
    console.log('>> POST: api/player/stop << ');

    if (playing === 1) {
	child.stdin.write('q');
	res.send(200, "Playback Stopped.");
    }
    else {
	console.log("Not playing");
	res.send(200, "Not playing anything.");
    }
}

// Pause API call
var pause = function(req, res, next) {

    logAndIncrementRequestId();
    console.log('>> POST: api/player/pause << ');

    if (playing === 1) {
	child.stdin.write('p');
	res.send(200, "Playback paused/unpaused.");
    }
    else {
	console.log("Not playing");
	res.send(200, "Not playing anything.");
    }
}

// Expose Play, Pause & Stop as the module API
exports.play = play;
exports.pause = pause;
exports.stop = stop;
